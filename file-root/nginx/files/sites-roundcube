#rate limit requests to prevent bruteforce
limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;

server {
    listen      80;
#    listen     [::]:80;
    server_name mail.tristor.ro;
    return 301  https://$server_name$request_uri;
}


server {
        listen   443 default_server ssl;
#       listen  [::]:443;

        root /usr/share/nginx/www/roundcube;
        index index.php index.html index.htm;

        server_name mail.tristor.ro;

        ssl_certificate /etc/ssl/certs/tristor.ro.combined.crt;
        ssl_certificate_key /etc/ssl/private/tristor.ro.key;

        #Enable Perfect Forward Secrecy
        ssl_dhparam /etc/ssl/dhparam.pem;

        #These should go in /etc/nginx/nginx.conf
        #ssl_session_timeout 10m;
        #ssl_session_cache shared:SSL:50m;

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        #ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS +RC4 RC4";
        ssl_ciphers "ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK";

        #Enable this for HSTS (recommended, but be careful)
        add_header Strict-Transport-Security "max-age=15768000; includeSubdomains";

        #OCSP Stapling
        #fetch OCSP records from URL in ssl_certificate and cache them
        ssl_stapling on;
        ssl_stapling_verify on;
        #verify chain of trust of OCSP response using Root CA and Intermediate certs
        ssl_trusted_certificate /etc/ssl/certs/rapidssl.ca-inter.crt;
        resolver 127.0.0.1;

        location / {
                try_files $uri $uri/ /index.html;
                limit_req       zone=one burst=10 nodelay;
        }

        error_page 404 /404.html;

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
              root /usr/share/nginx/www;
        }

        # pass the PHP scripts to FastCGI server listening on /var/run/php5-fpm.sock
        location ~ \.php$ {
                try_files $uri =404;
                fastcgi_pass unix:/var/run/php5-fpm.sock;
                fastcgi_index index.php;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                include fastcgi_params;

        }

}
